import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from google.colab import files

# Sample data
data = {
    'Timestamp': [
        '04:03:11.727', '04:03:13.715', '04:03:15.759', '04:03:17.807', '04:03:19.807',
        '04:03:21.858', '04:03:23.868', '04:03:25.907', '04:03:27.931', '04:03:29.949',
        '04:03:31.991', '04:03:34.015', '04:03:36.034', '04:03:38.108', '04:03:11.727',
        '04:03:13.715', '04:03:15.759', '04:03:17.807', '04:03:19.807', '04:03:21.858',
        '04:03:23.868', '04:03:25.907', '04:03:27.931', '04:03:29.949', '04:03:31.991',
        '04:03:34.015', '04:03:36.034', '04:03:38.108', '04:03:11.727', '04:03:13.715',
        '04:03:15.759', '04:03:17.807', '04:03:19.807', '04:03:21.858', '04:03:23.868',
        '04:03:25.907', '04:03:27.931', '04:03:29.949', '04:03:31.991', '04:03:34.015',
        '04:03:36.034', '04:03:38.108', '04:03:11.727', '04:03:13.715', '04:03:15.759',
        '04:03:17.807', '04:03:19.807', '04:03:21.858', '04:03:23.868', '04:03:25.907',
        '04:02:45.321', '04:02:47.357', '04:02:49.382', '04:02:51.415', '04:02:53.465',
        '04:02:55.500', '04:02:57.483', '04:02:59.519', '04:03:01.570', '04:03:03.569',
        '04:03:05.598', '04:03:07.629', '04:03:27.931', '04:03:29.949', '04:03:31.991',
        '04:03:34.015', '04:03:36.034', '04:03:38.108'
    ],
    'Temperature': [
        32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.60, 32.50, 32.60, 32.60,
        32.60, 32.70, 32.70, 32.70, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50,
        32.60, 32.50, 32.60, 32.60, 32.60, 32.70, 32.70, 32.70, 32.50, 32.50,
        32.50, 32.50, 32.50, 32.50, 32.60, 32.50, 32.60, 32.60, 32.60, 32.70,
        32.70, 32.70, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.60, 32.50,
        32.30, 32.40, 32.30, 32.40, 32.40, 32.40, 32.40, 32.40, 32.40, 32.40,
        32.40, 32.40, 32.60, 32.60, 32.60, 32.70, 32.70, 32.70
    ],
    'Humidity': [
        59.10, 59.00, 58.90, 62.50, 64.90, 67.50, 68.60, 69.00, 69.20, 68.90,
        72.90, 73.90, 74.20, 73.80, 59.10, 59.00, 58.90, 62.50, 64.90, 67.50,
        68.60, 69.00, 69.20, 68.90, 72.90, 73.90, 74.20, 73.80, 59.10, 59.00,
        58.90, 62.50, 64.90, 67.50, 68.60, 69.00, 69.20, 68.90, 72.90, 73.90,
        74.20, 73.80, 59.10, 59.00, 58.90, 62.50, 64.90, 67.50, 68.60, 69.00,
        59.90, 59.90, 59.80, 59.60, 59.60, 59.40, 59.60, 59.60, 59.60, 59.60,
        59.40, 59.60, 69.20, 68.90, 72.90, 73.90, 74.20, 73.80
    ],
    'Rainfall': [
        0.00, 1.04, 2.14, 3.04, 4.14, 5.05, 5.04, 5.04, 5.04, 5.05, 5.04, 5.14,
        5.04, 5.78, 5.15, 5.04, 5.14, 5.04, 5.20, 5.20, 5.20, 5.20, 5.20, 5.21,
        5.04, 5.14, 5.04, 5.78, 5.15, 5.04, 5.14, 5.04, 5.14, 5.05, 5.04, 5.04,
        5.04, 5.05, 5.04, 5.14, 5.04, 5.78, 5.15, 5.04, 5.14, 5.04, 5.14, 5.05,
        5.04, 5.04, 6.04, 6.14, 6.04, 6.04, 6.14, 5.04, 5.14, 5.04, 5.04, 5.04,
        5.04, 5.14, 5.04, 5.05, 5.04, 5.14, 5.04, 5.78
    ]
}

# Create DataFrame
df = pd.DataFrame(data)

# Step 1: Add a dummy date to the Timestamp column
df['Timestamp'] = '1900-01-01 ' + df['Timestamp']

# Step 2: Convert to datetime
df['Timestamp'] = pd.to_datetime(df['Timestamp'], format='%Y-%m-%d %H:%M:%S.%f')

# Display the DataFrame
print(df.head())
print(df.isnull().sum())
df = df.dropna()

# Step 3: EDA
print(df.describe())
df.hist(bins=50, figsize=(20, 15))
plt.show()
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.show()

# Step 4: Analyze trends
plt.figure(figsize=(10, 6))
plt.plot(df['Timestamp'], df['Temperature'], label='Temperature')
plt.xlabel('Timestamp')
plt.ylabel('Temperature (Â°C)')
plt.title('Temperature Over Time')
plt.legend()
plt.show()

plt.figure(figsize=(10, 6))
plt.plot(df['Timestamp'], df['Humidity'], label='Humidity', color='orange')
plt.xlabel('Timestamp')
plt.ylabel('Humidity (%)')
plt.title('Humidity Over Time')
plt.legend()
plt.show()



# Step 6: Machine Learning (Optional)
X = df[['Temperature', 'Humidity']]  # Removed 'Pressure'
y = df['Rainfall']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

